# Define the name of the workflow
name: CI devops 2023

# Specify the events that trigger the workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:

# Define the jobs to be executed as part of the workflow
jobs:
  # Define the 'test-backend' job
  test-backend:
    # Specify the runner environment for the job
    runs-on: ubuntu-22.04

    # List the steps to be executed within the job
    steps:
      # Step 1: Check out the GitHub code using the 'actions/checkout' action
      - name: Checkout your GitHub code
        uses: actions/checkout@v2.5.0

      # Step 2: Set up JDK 17 using the 'actions/setup-java' action
      - name: Set up JDK 17
        uses: actions/setup-java@v3  # Use the appropriate version of actions/setup-java
        with:
          java-version: 17  # Specify the JDK version you want to use
          distribution: 'adopt'  # Specify the distribution (e.g., 'adopt', 'adopt-lts', etc.)

      # Step 3: Build and test the project with Maven
      - name: Build and test with Maven
        run: mvn clean verify  # Replace with your actual build and test command
        working-directory: TP2/simple-api

  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ../TP2/simple-api
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/tp-devops/simple-api
          push: ${{ github.ref == 'refs/heads/main' }}


      - name: Build image and push database
        # DO the same for database
        uses: docker/build-push-action@v3  # Use the same action for the database
        with:
         context: ../TP2/database  # Relative path to the database component
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops/database  # Set the Docker image name and tag for the database
         push: ${{ github.ref == 'refs/heads/main' }}


      - name: Build image and push httpd
        # DO the same for httpd
        uses: docker/build-push-action@v3  # Use the same action for httpd
        with:
          context: ../TP2/http-server  # Relative path to the http component
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops/httpd  # Set the Docker image name and tag for httpd
          push: ${{ github.ref == 'refs/heads/main' }}

